y <- for (i in 1:length(a)) {
data <- read.csv(a[i])
if (sum(complete.cases(data)>150)) {
x <- rbind(cor(data$nitrate,data$sulfate,na.rm=TRUE))
}
}
x
?complete.cases
corr <- function(directory,threshold=0) {
x <- numeric()
a <- list.files(directory,full.names=TRUE)
for (i in 1:length(a)) {
data <- read.csv(a[i])
if  (sum(complete.cases(data)>threshold) {
x <- rbind(cor(data$nitrate,data$sulfate,na.rm=TRUE))
}
}
return(x)
}
source("submitscript1.R")
submit()
x <- numeric()
class(x)
a <- list.files("specdata",full.names=TRUE)
str(a)
data <- read.csv(a[1])
data
sum(complete.cases(data))
cor(data$nitrate,data$sulfate,na.rm=TRUE)
?cor
cor(data$nitrate,data$sulfate,use="pairwise.complete.obs")
source("complete.R")
complete("specdata",1)
complete("specdata,30:25")
complete("specdata",30:25)
complete("specdata",3)
source("corr.R")
x <- numeric()
a <- list.files("specdata",full.names=TRUE)
for (i in 1:length(a)) {
data <- read.csv(a[i])
if (sum(complete.cases(data))>100) {
x <- rbind(cor(data$nitrate,data$sulfate,use="pairwise.complete.obs"))
}
}
x
class(x)
x <-numeric()
source(corr.R)
source("corr.R")
corr <- function(directory,threshold=0) {
x <- numeric()
a <- list.files(directory,full.names=TRUE)
for (i in 1:length(a)) {
data <- read.csv(a[i])
if  (sum(complete.cases(data))>threshold) {
x <- rbind(cor(data$nitrate,data$sulfate,use="pairwise.complete.obs"))
}
}
return(x)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
x
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,9,10,12))
complete("specdata",c(2,4,8,10,12))
complete("specdata",30:25)
complete("specdata",3)
source("submitscript1.R")
submit()
7
submit()
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
?data.frame
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
source("complete.R")
complete("specdata",1)
complete("specdata",30:25)
complete("specdata",3)
complete("specdata",30:25)
source("complete.R")
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12))
complete("specdata",30:25)
?row.names
source("complete.R")
complete("specdata",1)
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
submit
submit()
submit()
corr <- function(directory,threshold=0) {
x <- numeric()
a <- list.files(directory,full.names=TRUE)
for (i in 1:length(a)) {
data <- read.csv(a[i])
if  (sum(complete.cases(data))>threshold) {
x <- rbind(cor(data$nitrate,data$sulfate,use="pairwise.complete.obs"))
}
}
return(x)
}
corr("specdata",1)
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
?rbind
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
?sapply
source("submitscript1.R")
source("complete.R")
complete("specdata",1)
?subset
a <- list.files("specdata",full.names=TRUE)
a
a <- subset(a[i,]==a[1:32,])
a <- subset(a,a==a[1:5,])
a <- subset(a,a[i,]==a[1:32,])
a <- subset(a,a[,1]==a[,1:32])
class(a)
a <- subset(a[i]==a[1:32])
a <- subset(a,a==a[1:32])
a <- a[1:32]
a
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",1)
source("complete.R")
complete("specdata",1)
submit()
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30;25)
complete("specdata",30:25)
a <- list.files(directory,full.names=TRUE)
a <- list.files("specdata",full.names=TRUE)
a <- a[30:25]
a
data <- read.csv(a[30])
read.csv(a[1])
result <- data.frame()
result[,'id']
?colnames
source("complete.R")
complete("specdata",30:25)
?data.frame
result <- data.frame()
result
colnames(result) <- c("id","nobs")
result <- data.frame(id=number(),nobs=number())
result <- data.frame(id=numeric(),nobs=numeric())
result
a <- list.files("specdata",full.names=TRUE)
a <- a[30:25]
a
result
data <- read.csv(a[1])
result[,"id"] <- cbind(data[1,"ID"])
result[,"id"]
result[,'id']
result[,'id'] <- rbind(data[1,"ID"])
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("complete.R")
complete("specdata",30:25)
source("submitscript1.R")
submit()
x <- numeric
class(x)
x <- numeric()
class(x)
str(x)
a <- list.files("specdata",full.names=TRUE)
length(a)
source("complete.R")
complete("specdata",1:length(a))
source("submitscript1.R")
x <- numeric()
a <- list.files("specdata",full.names=TRUE)
complete("specdata",1:length(a))
source("complete.R")
complete("specdata",1:length(a))
use <- complete("specdata",1:length(a))
str(use)
?subset
use <- subset(use, use$nobs > 150)
use
index <- use$nobs
index <- use$ids
index
index <- use$id
index
data <- read.csv(a[1])
c <- cor(data$nitrate,data$sulfate,use="pairwise.complete.obs")
x[i] <- c
x[2] <- c
x
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata",5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("submitscript1.R")
submit()
submit()
submit()
example(colMeans)
?read.file
?read.csv
?list.files
?solve
?NULL
?<<-
?`<<-`
?getmean()
?function
?function()
??function
norm <- function(x) sqrt(x%*%x)
norm(1:4)
norm(1)
norm(1:3)
?%
??%
x <- 1:4
class(x)
x%*%x
sqrt(30)
?sample
sample(c("heads","tails"),10000,replace=TRUE,prob=.5)
sample(c("heads","tails"),10000,replace=TRUE,prob=c(.5,.5)
x <- c("heads","tails")
sample(x,1000,replace=TRUE,prob=NULL)
?runs
??runs
s <- sample(x,10000,replace=TRUE,prob=NULL)
table(s)
x <- numeric()
x <- numeric
x <- numeric()
m <- NULL
set <- function (y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector()
x
m
mean
set
makeVector(x = numeric(1:40))
x
y
m
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(x=numeric(1:20))
x
m
get
set
setmean
getmean
makeVector()
x
m
x <- numeric(1:40)
x <- numeric(1:20)
?numeric
x <- 1:20
class(x)
x <- numeric(x)
x <- as.numeric(x)
class(x)
makeVector(x)
x
m
x$getmean
m <- x$getmean
source("example.R")
source(example)
source("example")
source("example .R")
makeVector
source("example.R")
z <- makesVector(c(1:100))
z <- makeVector(c(1:100))
z
cachemean(y)
cachemean(x)
cachemean(m)
cachemean()
cachemean
x$getmean()
ls(makeVector)
ls(cachemean)
makeVector()
source("example.R")
ls(environment(makeVector))
summary("cachemean")
get("cachmean",environment(makeVector))
get("cachemean",environment(makeVector))
?get
x$getmean()
x <- 1:100
x <- as.numeric(x)
x$getmean()
a <- makeVector()
source("example.R")
a <- makeVector()
a
a$list
a$list()
class(a)
class(a$set)
a$set(c(1:100))
a$get()
cachemean(a)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function (x,...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data,...)
x$setmean(m)
m
}
function(mean)
a
a$setmean()
source("example.R")
a <- makeVector()
a$set(c(1:10))
a$get()
a$setmean()
a$getmean()
cachemean(a)
a$getmean()
a$setmean()
source("cachematrix.R")
setwd("~/Dropbox/DataSci/RProg/ProgrammingAssignment2")
source("cachematrix.R")
source("cachematrix.R")
a <- makeCacheMatrix()
class(a)
class(a$set)
a$set(matrix(1:4,2,2))
a$get
a$get(x)
a$get()
cacheSolve(a)
??matrix
?matrix()
source("cachematrix.R")
a <- makeCacheMatrix()
class(a)
class(a$set)
a$set(1:4,2,2)
a$set(data.matrix(1:4,2,2))
a$set(data.matrix(1:4))
a$get
a$get
a$set
aget()
a$get()
?data.matrix
?matrix
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(1:100,10,10))
a$get()
cacheSolve(a)
cacheSolve(x)
cacheSolve(a$get())
source("cachematrix.R")
a <- makeCacheMatrix()
a$set <- matrix(1:100,10,10)
a$get()
a$get()
a$set <- matrix(1:100,10,10)
a$get()
a$get()
a$set(matrix(1:100,10,10))
a$set(matrix(1:100,10,10))
matrix(1:100,10,10)
z <- matrix(1:100,10,10)
a$set(z)
a$set(c(1:100))
source("cachematrix.R")
a <- makeCacheMatrix()
a$set(matrix(1:100,10,10))
a$get()
cacheSolve(a)
cacheSolve(a$get())
z <- a$get()
z
d <- solve(z)
z <- matrix(1,3;0,2)
z
z <- matrix(1;2,3;4)
z <- matrix(1,2,3,4)
z
?matrix
z <- matrix(c(1,5,10,2),2,2)
z
d <- solve(z)
d
z%*%d
?round
r <- trunc(d)
r
r <- trunc(d,digits=1)
r
d
d <- solve(z)
r <- z%*%d
r
r <- trunc(r,digits = 2)
r
a$set(c(1,5,10,2),2,2)
a$set(matrix(c(1,5,10,2),2,2))
a$get
a$get()
cacheSolve(a)
